Kn*M^+{W

entidades - arquivos que os scripts serão utilizados para recuperar os métodos getters e setters (retorna e alterar valores)
models - modelo base das estruturas para criação da tabela
views - lógica de negócio
services - serve para fazer o meio de campo com as funções do ORM (vai ter os métodos CRUD que vai estar interagindo diretamente com o bd)
schemas - vai receber os modelos e vai fazer validação

bibliotecas
- Flask
- Flask-Migrate 2.5.2 - verificação de versionamento do banco
- Flask-RESTful - ajuda na criação de API REST
- SQLAlchemy - ORM que abstrai a linguagem sql
- Flask-SQLAlchemy - interface SQLAlchemy
- marshmallow-sqlalchemy - validação de dados
- flask-marshmallow - validação
- mysqlclient

alteração que deve ser feita no terminal para o migration
- precisa entrar na pasta venv do projeto, >Scripts>activate para ativar o ambiente virtual em seguida - set FLASK_API=api.py , em seguida volta para o diretorio raiz (APIFlask) - flask db init - para inicializar o diretorio de migração, depois flask db migrate, flask db upgrade - para criar a tabela diretamente no bd. desc nome_da_tabela -  para mostrar a tabela

OBS: para relações de n para n criasse uma nova tabela para armazenar como chave primaria as chaves estrangeiras, no caso de professor a tabela de formação e na tabela de formação a chave estrangeira para professor

HATEOAS é um modelo desenvolvido por Leonard Richardson que traz o modelo REST para um novo nível, e cujo objetivo é ajudar os clientes que consomem o serviço REST, ou seja, nossa Web API, a navegar pelos recursos e saber o que podem fazer tornado as ações da WEB API mais fáceis de entender.

Segurança-
flask-JWT-Extended: autenticação com acess token
passlib: criptografia de senha
Documentação- 